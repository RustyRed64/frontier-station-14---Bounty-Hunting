using Content.Client.UserInterface.Controls;
using Content.Shared._NF.BountyHunter;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.BountyHunter.UI;

[GenerateTypedNameReferences]
public sealed partial class BountyHunterRedemptionMenu : FancyWindow
{
    public Action? SellRequested;

    public BountyHunterRedemptionMenu()
    {
        RobustXamlLoader.Load(this);
        SellButton.OnPressed += OnSellPressed;
    }

    private void OnSellPressed(BaseButton.ButtonEventArgs obj)
    {
        SellRequested?.Invoke();
    }

    public void UpdateState(BountyHunterRedemptionUIState message)
    {
        switch (message.BountyStatus)
        {
            /// Nothing inside
            case BountyHunterRedemptionStatus.NoBody:
            default:
                BodyLabel.Text = Loc.GetString("bounty-hunter-redemption-body-label-no-items");
                RedeemLabel.Text = Loc.GetString("bounty-hunter-redemption-redeem-label-no-items");
                SellButton.Disabled = true;
                break;
            // No Bounty
            case BountyHunterRedemptionStatus.NoBounty:
                BodyLabel.Text = Loc.GetString("bounty-hunter-redemption-body-label-no-bounty");
                RedeemLabel.Text = Loc.GetString("bounty-hunter-redemption-redeem-label-no-bounty");
                SellButton.Disabled = false;
                break;
            /// Perfectly Healthy
            case BountyHunterRedemptionStatus.Valid:
                BodyLabel.Text = Loc.GetString("bounty-hunter-redemption-body-label-valid-bounty");
                RedeemLabel.Text = Loc.GetString("bounty-hunter-redemption-redeem-label-no-bounty");
                SellButton.Disabled = false;
                break;
            /// Critted
            case BountyHunterRedemptionStatus.Critted:
                BodyLabel.Text = Loc.GetString("bounty-hunter-redemption-body-label-valid-bounty");
                RedeemLabel.Text = Loc.GetString("bounty-hunter-redemption-redeem-label-critted");
                SellButton.Disabled = false;
                break;
            /// Died
            case BountyHunterRedemptionStatus.Died:
                BodyLabel.Text = Loc.GetString("bounty-hunter-redemption-body-label-valid-bounty");
                RedeemLabel.Text = Loc.GetString("bounty-hunter-redemption-redeem-label-died");
                SellButton.Disabled = false;
                break;
        }
    }
}
